package org.tycoon.parser.extractor;

import org.tycoon.parser.antlr.TycoonLexer;
import org.tycoon.parser.antlr.TycoonParser;
import org.antlr.v4.runtime.*;
import org.antlr.v4.runtime.tree.*;
import org.tycoon.parser.catalog.Hand;

import java.util.ArrayList;

/**
 * Created by adri on 1/05/17.
 */
public class HandsExtractor {
    /**
     * Extracts a Hand list from a Text source.
     *
     * @param target Text to extract a Hand list
     * @return A list of Hands contained in target text
     */
    public static ArrayList<Hand> extract(String target) {
        // Sets ANTLRInputStream with text contained in target
        ANTLRInputStream input = new ANTLRInputStream(target);
        // Creates new lexer using input
        TycoonLexer lexer = new TycoonLexer(input);
        // Creates a TokenStream from lexer
        CommonTokenStream tokens = new CommonTokenStream(lexer);
        // Creates a Parser from TokenStream
        TycoonParser parser = new TycoonParser(tokens);
        // Stores ParseTree generated by parser
        ParseTree tree = parser.hands();

        // Instances Visitor to explore the ParseTree
        TycoonBaseVisitorImpl tycoonVisitor = new TycoonBaseVisitorImpl();

        // Begin to explore the ParseTree
        tycoonVisitor.visit(tree);

        // After ParseTree is explored, the visitor object generates a list of Hand internally
        // With get() method retrieves this ArrayList<Hand>
        return tycoonVisitor.get();
    }
}
